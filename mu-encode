	.arch armv7-a
	.eabi_attribute 28, 1
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.file	"mu-encode.c"
	.text
	.align	2
	.global	sign
	.arch armv7-a
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	sign, %function
sign:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	str	fp, [sp, #-4]!
	add	fp, sp, #0
	sub	sp, sp, #12
	str	r0, [fp, #-8]
	ldr	r3, [fp, #-8]
	cmp	r3, #0
	bge	.L2
	mov	r3, #0
	b	.L3
.L2:
	mov	r3, #1
.L3:
	mov	r0, r3
	add	sp, fp, #0
	@ sp needed
	ldr	fp, [sp], #4
	bx	lr
	.size	sign, .-sign
	.align	2
	.global	magnitude
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	magnitude, %function
magnitude:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	str	fp, [sp, #-4]!
	add	fp, sp, #0
	sub	sp, sp, #12
	str	r0, [fp, #-8]
	ldr	r3, [fp, #-8]
	cmp	r3, #0
	bge	.L5
	ldr	r3, [fp, #-8]
	rsb	r3, r3, #0
	b	.L6
.L5:
	ldr	r3, [fp, #-8]
.L6:
	mov	r0, r3
	add	sp, fp, #0
	@ sp needed
	ldr	fp, [sp], #4
	bx	lr
	.size	magnitude, .-magnitude
	.align	2
	.global	codeword_compression
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	codeword_compression, %function
codeword_compression:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	str	fp, [sp, #-4]!
	add	fp, sp, #0
	sub	sp, sp, #28
	str	r0, [fp, #-24]
	str	r1, [fp, #-28]
	ldr	r3, [fp, #-24]
	and	r3, r3, #4096
	cmp	r3, #0
	beq	.L8
	mov	r3, #7
	str	r3, [fp, #-8]
	ldr	r3, [fp, #-24]
	lsr	r3, r3, #8
	and	r3, r3, #15
	str	r3, [fp, #-12]
	ldr	r3, [fp, #-28]
	lsl	r2, r3, #7
	ldr	r3, [fp, #-8]
	lsl	r3, r3, #4
	and	r3, r3, r2
	ldr	r2, [fp, #-12]
	and	r3, r3, r2
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	uxtb	r3, r3
	b	.L9
.L8:
	ldr	r3, [fp, #-24]
	and	r3, r3, #2048
	cmp	r3, #0
	beq	.L10
	mov	r3, #6
	str	r3, [fp, #-8]
	ldr	r3, [fp, #-24]
	lsr	r3, r3, #7
	and	r3, r3, #15
	str	r3, [fp, #-12]
	ldr	r3, [fp, #-28]
	lsl	r2, r3, #7
	ldr	r3, [fp, #-8]
	lsl	r3, r3, #4
	and	r3, r3, r2
	ldr	r2, [fp, #-12]
	and	r3, r3, r2
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	uxtb	r3, r3
	b	.L9
.L10:
	ldr	r3, [fp, #-24]
	and	r3, r3, #512
	cmp	r3, #0
	beq	.L11
	mov	r3, #4
	str	r3, [fp, #-8]
	ldr	r3, [fp, #-24]
	lsr	r3, r3, #5
	and	r3, r3, #15
	str	r3, [fp, #-12]
	ldr	r3, [fp, #-28]
	lsl	r2, r3, #7
	ldr	r3, [fp, #-8]
	lsl	r3, r3, #4
	and	r3, r3, r2
	ldr	r2, [fp, #-12]
	and	r3, r3, r2
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	uxtb	r3, r3
	b	.L9
.L11:
	ldr	r3, [fp, #-24]
	and	r3, r3, #256
	cmp	r3, #0
	beq	.L12
	mov	r3, #3
	str	r3, [fp, #-8]
	ldr	r3, [fp, #-24]
	lsr	r3, r3, #4
	and	r3, r3, #15
	str	r3, [fp, #-12]
	ldr	r3, [fp, #-28]
	lsl	r2, r3, #7
	ldr	r3, [fp, #-8]
	lsl	r3, r3, #4
	and	r3, r3, r2
	ldr	r2, [fp, #-12]
	and	r3, r3, r2
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	uxtb	r3, r3
	b	.L9
.L12:
	ldr	r3, [fp, #-24]
	and	r3, r3, #128
	cmp	r3, #0
	beq	.L13
	mov	r3, #2
	str	r3, [fp, #-8]
	ldr	r3, [fp, #-24]
	lsr	r3, r3, #3
	and	r3, r3, #15
	str	r3, [fp, #-12]
	ldr	r3, [fp, #-28]
	lsl	r2, r3, #7
	ldr	r3, [fp, #-8]
	lsl	r3, r3, #4
	and	r3, r3, r2
	ldr	r2, [fp, #-12]
	and	r3, r3, r2
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	uxtb	r3, r3
	b	.L9
.L13:
	ldr	r3, [fp, #-24]
	and	r3, r3, #64
	cmp	r3, #0
	beq	.L14
	mov	r3, #1
	str	r3, [fp, #-8]
	ldr	r3, [fp, #-24]
	lsr	r3, r3, #2
	and	r3, r3, #15
	str	r3, [fp, #-12]
	ldr	r3, [fp, #-28]
	lsl	r2, r3, #7
	ldr	r3, [fp, #-8]
	lsl	r3, r3, #4
	and	r3, r3, r2
	ldr	r2, [fp, #-12]
	and	r3, r3, r2
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	uxtb	r3, r3
	b	.L9
.L14:
	ldr	r3, [fp, #-24]
	and	r3, r3, #32
	cmp	r3, #0
	beq	.L15
	mov	r3, #0
	str	r3, [fp, #-8]
	ldr	r3, [fp, #-24]
	lsr	r3, r3, #1
	and	r3, r3, #15
	str	r3, [fp, #-12]
	ldr	r3, [fp, #-28]
	lsl	r2, r3, #7
	ldr	r3, [fp, #-8]
	lsl	r3, r3, #4
	and	r3, r3, r2
	ldr	r2, [fp, #-12]
	and	r3, r3, r2
	str	r3, [fp, #-16]
	ldr	r3, [fp, #-16]
	uxtb	r3, r3
	b	.L9
.L15:
	mov	r3, #0
.L9:
	mov	r0, r3
	add	sp, fp, #0
	@ sp needed
	ldr	fp, [sp], #4
	bx	lr
	.size	codeword_compression, .-codeword_compression
	.section	.rodata
	.align	2
.LC0:
	.ascii	"Usage: %s <path/to/wav/file>\000"
	.text
	.align	2
	.global	main
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	main, %function
main:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{fp, lr}
	add	fp, sp, #4
	sub	sp, sp, #8
	str	r0, [fp, #-8]
	str	r1, [fp, #-12]
	ldr	r3, [fp, #-8]
	cmp	r3, #2
	beq	.L17
	ldr	r3, [fp, #-12]
	ldr	r3, [r3]
	mov	r1, r3
	movw	r0, #:lower16:.LC0
	movt	r0, #:upper16:.LC0
	bl	printf
	mov	r3, #1
	b	.L18
.L17:
	mov	r3, #0
.L18:
	mov	r0, r3
	sub	sp, fp, #4
	@ sp needed
	pop	{fp, pc}
	.size	main, .-main
	.ident	"GCC: (GNU) 8.2.1 20180801 (Red Hat 8.2.1-2)"
	.section	.note.GNU-stack,"",%progbits
